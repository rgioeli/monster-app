{"version":3,"sources":["components/card-list/card/card.component.js","components/card-list/card-list.component.js","components/card-list/SearchBox/search-box.component.js","App.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","searchMonsters","monsters","filter","toLowerCase","includes","searchField","map","SearchBox","placeholder","handleChange","type","onChange","App","handleSearch","e","setState","target","value","state","fetch","then","response","json","data","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA2BF,EAAMG,QAAQC,GAAzC,oBAAuDJ,EAAMG,QAAQC,MAC7E,6BAAMJ,EAAMG,QAAQE,OACpB,4BAAKL,EAAMG,QAAQG,YCJlBC,EAAW,SAACP,GAErB,IAAMQ,EAAiBR,EAAMS,SAASC,QAAO,SAAAP,GACzC,OAAOA,EAAQE,KAAKM,cAAcC,SAASZ,EAAMa,gBAGrD,OACI,qBAAKZ,UAAU,YAAf,SAEOO,EAAeM,KAAI,SAAAX,GACf,OAAO,cAAC,EAAD,CAAyBA,QAAUA,GAAvBA,EAAQC,UCdjCW,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBACIC,KAAK,SACLF,YAAcA,EACdG,SAAWF,KCmCRG,E,kDAjCb,aAAe,IAAD,8BACZ,gBAQFC,aAAe,SAAAC,GAEb,EAAKC,SAAS,CACZV,YAAaS,EAAEE,OAAOC,MAAMd,iBAT9B,EAAKe,MAAQ,CACXjB,SAAU,GACVI,YAAa,IALH,E,qDAgBd,WAAqB,IAAD,OAClBc,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKR,SAAS,CAAEd,SAAUsB,S,oBAG1C,WACE,OACE,gCACE,cAAC,EAAD,CAAWf,YAAY,oBAAoBC,aAAee,KAAKX,eAC/D,cAAC,EAAD,CAAUZ,SAAWuB,KAAKN,MAAMjB,SAAWI,YAAcmB,KAAKN,MAAMb,qB,GA3B1DoB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6b1eac48.chunk.js","sourcesContent":["import './card.style.css'\r\n\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={ `https://robohash.org/${props.monster.id}?set=set2${props.monster.id}` }/>\r\n            <h1>{ props.monster.name }</h1>\r\n            <p>{ props.monster.email }</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from './card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n    // get filtered search results\r\n    const searchMonsters = props.monsters.filter(monster => {\r\n        return monster.name.toLowerCase().includes(props.searchField)\r\n    })\r\n    \r\n    return (\r\n        <div className='card-list'>\r\n           {\r\n               searchMonsters.map(monster => {\r\n                   return <Card key={ monster.id } monster={ monster }/>\r\n               })\r\n           }\r\n        </div>\r\n    )\r\n}","export const SearchBox = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <input\r\n            type=\"search\"\r\n            placeholder={ placeholder }\r\n            onChange={ handleChange }\r\n        />\r\n    )\r\n}","import './App.css';\nimport { Component } from 'react'\n// Components\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/card-list/SearchBox/search-box.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  handleSearch = e => {\n    // arrow functions automatically get bound to the context it is within\n    this.setState({\n      searchField: e.target.value.toLowerCase()\n    })\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => this.setState({ monsters: data }))\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchBox placeholder=\"Search Monster...\" handleChange={ this.handleSearch } />\n        <CardList monsters={ this.state.monsters } searchField={ this.state.searchField } />\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}